<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.schoolwebsite.dao.GradeDaoInter">

    <resultMap id="res" type="com.example.schoolwebsite.entity.Grade">
        <id column="Id" jdbcType="INTEGER" javaType="java.lang.Integer" property="id"/>
        <result column="grade" jdbcType="INTEGER" javaType="java.lang.Integer" property="grade"/>
        <result column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" property="createTime"/>
        <result column="status" jdbcType="VARCHAR" javaType="java.lang.String" property="status"/>
        <result column="description" jdbcType="VARCHAR" javaType="java.lang.String" property="description"/>
        <association property="student" javaType="com.example.schoolwebsite.entity.Student">
            <id column="studentId" jdbcType="INTEGER" javaType="java.lang.Integer" property="id"/>
            <result column="studentName" jdbcType="VARCHAR" javaType="java.lang.String" property="studentName"/>
        </association>
        <association property="course" javaType="com.example.schoolwebsite.entity.Course">
            <id column="courseId" jdbcType="INTEGER" javaType="java.lang.Integer" property="id"/>
            <result column="courseName" jdbcType="VARCHAR" javaType="java.lang.String" property="courseName"/>
        </association>
    </resultMap>

    <insert id="add">
        insert into schoolwebsite.grade
        <trim>
            ( id
            , studentid
            , courseid
            , grade
            , createtime
            <if test="grade.status!=null">
            , status
            </if>
            <if test="grade.description!=null">
            , description
            </if>
            )
        </trim>
        VALUE
        <trim>
            (#{grade.id,jdbcType=VARCHAR}
            ,#{grade.student.id}
            ,#{grade.course.id}
            ,#{grade.grade}
            ,NOW()
            <if test="grade.status!=null">
            ,#{grade.status}
            </if>
            <if test="grade.description!=null">
            ,#{grade.description}
            </if>
            )
        </trim>
    </insert>

    <delete id="delete">
        delete from schoolwebsite.grade where grade.Id = #{gradeId}
    </delete>

    <update id="update">
        update schoolwebsite.grade set
        <trim prefixOverrides=",">
        <if test="grade.student!=null">
            <if test="grade.student.id!=null">
                grade.studentId = #{grade.student.id}
            </if>
        </if>
        <if test="grade.course!=null">
            <if test="grade.course.id!=null">
                ,grade.courseId = #{grade.course.id}
            </if>
        </if>
        <if test="grade.grade!=null">
            ,grade.grade = #{grade.grade}
        </if>
        </trim>
        where grade.id = #{grade.id}
    </update>

    <select id="selectbyname" resultMap="res">
        select grade.id
             , grade.studentid
             , grade.courseid
             , grade.grade
             , grade.createtime
             , grade.status
             , grade.description
             , student.studentid
             , student.studentname
             , student.studentsex
             , student.studentage
             , course.courseid
             , course.coursename
        from
                      schoolwebsite.grade
                    ,schoolwebsite.student
                    ,schoolwebsite.course
        where
             grade.studentId = student.studentId and
             grade.courseId = course.courseId
             <if test="studentName!=null">
                and student.studentName = #{studentName}
             </if>
             <if test="courseName!=null">
                and course.courseName = #{courseName}
             </if>
    </select>

    <select id="selectbyid" resultMap="res">
        select grade.id
        , grade.studentid
        , grade.courseid
        , grade.grade
        , grade.createtime
        , grade.status
        , grade.description
        , student.studentid
        , student.studentname
        , student.studentsex
        , student.studentage
        , course.courseid
        , course.coursename
        from
        schoolwebsite.grade
        ,schoolwebsite.student
        ,schoolwebsite.course
        where
        grade.studentId = student.studentId and
        grade.courseId = course.courseId and
        grade.Id = #{gradeId}
    </select>

</mapper>
